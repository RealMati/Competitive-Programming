class NumMatrix:

    def __init__(self, matrix: List[List[int]]):
        self.matrix=matrix
        self.prefix_sum=[[0]*(len(matrix[0])+1) for i in range(len(matrix)+1)]
        for row in range(1,len(matrix)+1):
            for column in range(1,len(matrix[0])+1):
                self.prefix_sum[row][column]=matrix[row-1][column-1]+self.prefix_sum[row-1][column]+self.prefix_sum[row][column-1]-self.prefix_sum[row-1][column-1]
    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:
        return self.prefix_sum[row2+1][col2+1]-self.prefix_sum[row1][col2+1]-self.prefix_sum[row2+1][col1]+self.prefix_sum[row1][col1]


# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# param_1 = obj.sumRegion(row1,col1,row2,col2)
